PASOS PARA AGREGAR PERSISTENCIA A UNA LIVE USB DE KALI LINUX
(y talves otras dostros basadas en Debian, pero hay que revisar)

Las instrucciones est\'an planteadas para ser ejecutadas desde un sistema GNU-Linux

WARNING: Although the process of imaging Kali Linux onto a USB drive is 
very easy, you can just as easily overwrite a disk drive you didn’t intend 
to with dd if you do not understand what you are doing, or if you specify 
an incorrect output path. Double-check what you’re doing before you do it, 
it’ll be too late afterwards.

Consider yourself warned.

PASO 1
First, you’ll need to identify the device path to use to write the image 
to your USB drive. Without the USB drive inserted into a port, execute 
the command
sudo fdisk -l

at a command prompt in a terminal window (if you don’t use elevated 
privileges with fdisk, you won’t get any output). You’ll get output 
that will look something (not exactly) like this, showing a single 
drive — “/dev/sda” — containing three partitions 

PASO 2
Now, plug your USB drive into an available USB port on your system, 
and run the same command, “sudo fdisk -l” a second time. Now, the output 
will look something (again, not exactly) like this, showing an additional 
device which wasn’t there previously, in this example “/dev/sdb”, 
a 16GB USB drive:

PASO 3
Proceed to (carefully!) image the Kali ISO file on the USB device. 
The example command below assumes that the ISO image you’re writing is 
named “kali-linux-1.0.9a-amd64.iso” and is in your current working 
directory. The blocksize parameter can be increased, and while it may 
speed up the operation of the dd command, it can occasionally produce 
unbootable USB drives, depending on your system and a lot of different 
factors. The recommended value, “bs=512k”, is conservative and reliable.
 dd if=kali-linux-1.0.9a-amd64.iso of=/dev/sdb bs=512k

Imaging the USB drive can take a good amount of time, over ten minutes 
or more is not unusual, as the sample output below shows. Be patient!

The dd command provides no feedback until it’s completed, but if your 
drive has an access indicator, you’ll probably see it flickering from 
time to time. The time to dd the image across will depend on the speed 
of the system used, USB drive itself, and USB port it’s inserted into. 
Once dd has finished imaging the drive, it will output something that 
looks like this:

5823+1 records in
5823+1 records out
3053371392 bytes (3.1 GB) copied, 746.211 s, 4.1 MB/s

That’s it, really! You can now boot into a Kali Live / Installer 
environment using the USB device.

PASO 4 AGREGAR PERSISTENCIA
First, begin by imaging the latest Kali Linux ISO (currently v1.0.9a) to 
your USB drive as described in this article. We’re going to assume that the 
two partitions created by the imaging are /dev/sdb1 and /dev/sdb2. This can 
be verified with the command “fdisk -l“.

PASO 5
Create and format an additional partition on the USB drive.
First, let’s create the new partition in the empty space above our 
Kali Live partitions.


end=7gb
read start _ < <(du -bcm kali-linux-1.0.8-amd64.iso | tail -1); echo $start
parted /dev/sdb mkpart primary $start $end

The parted command may advise you that it can’t use the exact start values 
you specified; if so, accept the suggested value instead. If advised that 
the partition isn’t placed at an optimal location, “ignore” it. When parted 
completes, the new partition should have been created at /dev/sdb3; again, 
this can be verified with the command “fdisk -l“.

PASO 6
Next, create an ext3 file system in the partition and label it “persistence”.
mkfs.ext3 -L persistence /dev/sdb3
e2label /dev/sdb3 persistence

PASO 7
Create a mount point, mount the new partition there, and then create the 
configuration file to enable persistence. Finally, unmount the partition.
mkdir -p /mnt/my_usb
mount /dev/sdb3 /mnt/my_usb
echo "/ union" > /mnt/my_usb/persistence.conf
umount /dev/sdb3


And that's it!. (2018.02.20.14.11)
